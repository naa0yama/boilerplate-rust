# yaml-language-server: $schema=https://www.schemastore.org/github-action.json
name: "Release Action"
description: "Common release workflow for building and publishing releases"
inputs:
  tag:
    description: "Tag to release"
    required: false
    type: boolean
    default: ""

runs:
  using: "composite"
  steps:
    - name: Extract tool versions
      id: versions
      run: |
        sccache_version=$(grep -E '^ARG SCCACHE_VERSION=v?[0-9]+\.[0-9]+\.[0-9]+' Dockerfile | sed -E 's/ARG SCCACHE_VERSION=(v?[0-9]+\.[0-9]+\.[0-9]+).*/\1/')
        package_name=$(grep -E '^\[package\]' -A 10 Cargo.toml | grep -E '^name = "' | sed -E 's/name = "(.*)"/\1/')

        if grep -q '^\[\[bin\]\]' Cargo.toml; then
          main_bin=$(grep -E '^\[\[bin\]\]' -A 10 Cargo.toml | grep -E '^name = "'"$package_name"'"' | sed -E 's/name = "(.*)"/\1/')
          binary_name=${main_bin:-$(grep -E '^\[\[bin\]\]' -A 10 Cargo.toml | grep -E '^name = "' | head -n 1 | sed -E 's/name = "(.*)"/\1/')}
        else
          binary_name="$package_name"
        fi

        echo "sccache=${sccache_version}" >> "$GITHUB_OUTPUT"
        echo "just=${just_version}" >> "$GITHUB_OUTPUT"
        echo "package_name=${package_name}" >> "$GITHUB_OUTPUT"
        echo "binary_name=${binary_name}" >> "$GITHUB_OUTPUT"

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.9
      with:
        disable_annotations: true
        version: ${{ steps.versions.outputs.sccache }}

    - name: Cache rustup
      uses: actions/cache@v4
      with:
        path: |
          ~/.rustup/settings.toml
          ~/.rustup/toolchains/1.*
        key: v0-rust-rustup-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/rust-toolchain.toml') }}

    - uses: actions-rust-lang/setup-rust-toolchain@v1

    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release binary
      shell: bash
      run: |
        cargo build --release

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      if: inputs.tag != ''
      with:
        tag_name: ${{ inputs.tag }}
        files: |
          target/release/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ github.token }}
