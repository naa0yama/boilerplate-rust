id: prefer-nested-result
language: rust
message: "エラーの分類にネストしたResult型の使用を検討してください (project_rules.md 2.3)"
note: "Result<Result<T, CustomError>, anyhow::Error> パターンで回復可能/不可能なエラーを分離することを推奨します"
severity: warning
rule:
  all:
    # 関数の戻り値型をチェック
    - kind: function_item
    # Result<T, E>型の戻り値を持つ
    - has:
        all:
          - kind: generic_type
          - regex: "^Result<"
    # 単純なResult型（ネストしていない）を検出
    - not:
        any:
          # 既にネストしたResult型
          - has:
              regex: 'Result<\\s*Result<'
          # anyhow::Errorを使用
          - has:
              regex: "anyhow::"
          # testモジュール内は除外
          - inside:
              all:
                - kind: mod_item
                - has:
                    regex: 'cfg\\(\\s*test\\s*\\)'
          # #[cfg(test)]アノテーション付きの関数
          - has:
              regex: 'cfg\\(\\s*test\\s*\\)'
          # main関数は除外
          - has:
              regex: 'fn\\s+main'
          # ヘルパー関数やプライベート関数は一部除外
          - inside:
              regex: '//\\s*ast-grep-ignore'
